#!/usr/bin/perl

use warnings;
use strict;

use Midnight::Game;

use IO::Prompt;

require Text::Wrap;
sub say (@) {
    local $Text::Wrap::columns;
    $Text::Wrap::columns = 80;

    print Text::Wrap::wrap('', '', @_), "\n";
}

my %commands_base = (
    look     => \&cmd_look,
    describe => \&cmd_describe,
    local    => 1,
);

my (%commands, %conflicts);
for my $key (keys %commands_base) {
    my @bits = split '', $key;
    my $cmd = "";
    while (my $bit = shift @bits) {
        $cmd .= $bit;
        if (exists $commands{$cmd}) {
            $conflicts{$cmd}->{$key} = 1;
            $conflicts{$cmd}->{$commands{$cmd}} = 1;
        }
        else {
            $commands{$cmd} = $key;
        }
    }
}
delete $commands{$_} for keys %conflicts;

my $cmd_regex_str = "(?:" . join("|", sort keys %commands) . ")";
my $cmd_regex = qr/$cmd_regex_str/i;

my $game = Midnight::Game->new;
my $map = $game->get_map;

my $me = $game->LUXOR;

cmd_look();

while (! $game->is_game_over) {
    my $cmd;
    while ($cmd = prompt "What now? ", -until => $cmd_regex) {
        my $msg = "Sorry, I don't understand '$cmd'.";

        if (exists $conflicts{$cmd}) {
            $msg .= " Did you mean: " . join(" ", sort keys %{$conflicts{$cmd}});
        }

        say $msg;
    }

    $commands_base{$commands{$cmd}}->();
}

sub cmd_look {
    my $looking = $map->get_looking_towards($me->get_location, $me->get_direction);

    say $me;
    say "He stands at " . $me->get_location .
        " looking " . $me->get_direction .
        " at $looking.";
    say $me->get_time;
}

sub cmd_describe {
    describe_location($me->get_location);
}

sub describe_location {
    my ($location) = @_;

    my $guard = $location->get_guard;
    if($guard) {
        say "$guard of the " . $guard->get_race . " guard the " . $location->get_feature . ".";
    }

    for my $c (@{$location->get_characters}) {
        next if $c == $me;

        my $line = "$c is here.";

        my $warriors = $c->get_warriors;
        my $riders = $c->get_riders;

        if ($warriors->get_how_many > 0 or $riders->get_how_many > 0) {
            $line .= " He commands ";

            if ($warriors->get_how_many > 0 and $riders->get_how_many > 0) {
                $line .= "$warriors and $riders";
            }
            elsif ($warriors->get_how_many > 0) {
                $line .= $warriors;
            }
            elsif ($riders->get_how_many > 0) {
                $line .= $riders;
            }
            
            $line .= " of the " . $c->get_race . ".";
        }

        say $line;
    }
}

